#ifndef RESOURCESMANAGER_HPP
#define RESOURCESMANAGER_HPP

//==================
#include <SFML/Graphics/Texture.hpp>
#include <SFML/Graphics/Shader.hpp>
#include <SFML/Graphics/Font.hpp>
#include <SFML/Audio/SoundBuffer.hpp>
#include <string>
#include <map>


///////////////////////////////////////////////////////////
/// \brief The ResourcesManager contains all the resources
/// (textures, sounds ecc) of the game
///
///////////////////////////////////////////////////////////
class ResourcesManager
{
public:

	///////////////////////////////////////////////////////////
	/// \brief Contructor
	///
	///////////////////////////////////////////////////////////
	ResourcesManager();

	///////////////////////////////////////////////////////////
	/// \brief Destructor
	///
	///////////////////////////////////////////////////////////
	~ResourcesManager();

	///////////////////////////////////////////////////////////
	/// \brief Load a texture
	///
	///////////////////////////////////////////////////////////
	void LoadTexture(const std::string tablename, const std::string path);

	///////////////////////////////////////////////////////////
	/// \brief Get a texture
	///
	///////////////////////////////////////////////////////////
	sf::Texture& GetTexture(const std::string tablename);

	///////////////////////////////////////////////////////////
	/// \brief Load a font
	///
	///////////////////////////////////////////////////////////
	void LoadFont(const std::string tablename, const std::string path);

	///////////////////////////////////////////////////////////
	/// \brief Get a font
	///
	///////////////////////////////////////////////////////////
	sf::Font& GetFont(const std::string tablename);

	///////////////////////////////////////////////////////////
	/// \brief Load a shader
	///
	///////////////////////////////////////////////////////////
    void LoadShader(const std::string tablename, const std::string path,
                    const sf::Shader::Type type);

	///////////////////////////////////////////////////////////
	/// \brief Get a shader
	///
	///////////////////////////////////////////////////////////
	sf::Shader& GetShader(const std::string tablename);

	///////////////////////////////////////////////////////////
	/// \brief Load a sound
	///
	///////////////////////////////////////////////////////////
	void LoadSoundBuffer(const std::string tablename, const std::string path);

	///////////////////////////////////////////////////////////
	/// \brief Get a sound
	///
	///////////////////////////////////////////////////////////
	sf::SoundBuffer& GetSoundBuffer(const std::string tablename);
    
    ///////////////////////////////////////////////////////////
    /// \brief Get the resources path
    ///
    ///////////////////////////////////////////////////////////
    static std::string GetResourcePath();
    
    ///////////////////////////////////////////////////////////
    /// \brief Unload all the resources
    ///
    ///////////////////////////////////////////////////////////
    void UnloadAll();

private:
	std::map<const std::string, sf::Texture> _TexturesTable;
	std::map<const std::string, sf::Font> _FontTable;
	std::map<const std::string, sf::Shader> _ShaderTable;
	std::map<const std::string, sf::SoundBuffer> _SoundTable;
};

#endif // RESOURCESMANAGER_HPP
