#ifndef SFU_PARTICLEEMITTER_HPP
#define SFU_PARTICLEEMITTER_HPP

#include <SFML/Graphics/Drawable.hpp>
#include <SFML/Graphics/Transformable.hpp>
#include <SFML/Graphics/VertexArray.hpp>

namespace sf
{
    class RenderTarget;
    class RenderStates;
}

namespace sfu
{
    ////////////////////////////////////////////////////////////
    /// \brief A small object used for special effects
    ///
    ////////////////////////////////////////////////////////////
    class Particle
    {
    public:
        
        ////////////////////////////////////////////////////////////
        /// \brief Contructor
        ///
        ////////////////////////////////////////////////////////////
        Particle();
        
        ////////////////////////////////////////////////////////////
        /// \brief Contructor
        ///
        ////////////////////////////////////////////////////////////
        Particle(const sf::Vector2f pos, const sf::Vector2f dir,
                 const sf::Color color, const unsigned int size, const float lifetime);
        
        ////////////////////////////////////////////////////////////
        /// \brief Set position
        ///
        ////////////////////////////////////////////////////////////
        void SetPosition(const float x, const float y);
        
        ////////////////////////////////////////////////////////////
        /// \brief Set Position
        ///
        ////////////////////////////////////////////////////////////
        void SetPosition(const sf::Vector2f pos);
        
        ////////////////////////////////////////////////////////////
        /// \brief Set direction
        ///
        ////////////////////////////////////////////////////////////
        void SetDirection(const float x, const float y);
        
        ////////////////////////////////////////////////////////////
        /// \brief Set direction
        ///
        ////////////////////////////////////////////////////////////
        void SetDirection(const sf::Vector2f dir);
        
        ////////////////////////////////////////////////////////////
        /// \brief Set color
        ///
        ////////////////////////////////////////////////////////////
        void SetColor(const sf::Color color);
        
        ////////////////////////////////////////////////////////////
        /// \brief Set size
        ///
        ////////////////////////////////////////////////////////////
        void SetSize(const unsigned int size);
        
        ////////////////////////////////////////////////////////////
        /// \brief Set lifetime
        ///
        ////////////////////////////////////////////////////////////
        void SetLifetime(const float lifetime);
        
        ////////////////////////////////////////////////////////////
        /// \brief Get postion
        ///
        ////////////////////////////////////////////////////////////
        sf::Vector2f GetPosition() const;
        
        ////////////////////////////////////////////////////////////
        /// \brief Get direction
        ///
        ////////////////////////////////////////////////////////////
        sf::Vector2f GetDirection() const;
        
        ////////////////////////////////////////////////////////////
        /// \brief Get color
        ///
        ////////////////////////////////////////////////////////////
        sf::Color GetColor() const;
        
        ////////////////////////////////////////////////////////////
        /// \brief Get lifetime
        ///
        ////////////////////////////////////////////////////////////
        const float GetLifetime() const;
        
        //Friend
        friend class ParticleEmitter;
        
    private:
        sf::Vector2f m_position;
        sf::Vector2f m_direction;
        sf::Color m_color;
        unsigned int m_size;
        float m_lifetime;
        float m_maxlifetime;
    };


    ////////////////////////////////////////////////////////////
    /// \brief The ParticleEmitter is used to store end render
    /// particles
    ///
    ////////////////////////////////////////////////////////////
    class ParticleEmitter : public sf::Drawable, public sf::Transformable
    {
    public:
        ////////////////////////////////////////////////////////////
        /// \brief Constructor
        ///
        ////////////////////////////////////////////////////////////
        ParticleEmitter();
        
        ////////////////////////////////////////////////////////////
        /// \brief Update
        ///
        ////////////////////////////////////////////////////////////
        void Update(const float etime);
        
        ////////////////////////////////////////////////////////////
        /// \brief Add a particle
        ///
        ////////////////////////////////////////////////////////////
        void AddParticle(Particle part);
        
    private:
        
        ////////////////////////////////////////////////////////////
        /// \brief Draw all the particles
        ///
        ////////////////////////////////////////////////////////////
        virtual void draw(sf::RenderTarget& target, sf::RenderStates states) const;
        
        std::vector<Particle> particles;
        sf::VertexArray vertices;
        
    };
    
}

#endif // SFU_PARTICLEEMITTER_HPP
